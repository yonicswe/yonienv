

let g:netrw_liststyle=3
let g:netrw_keepdir=0
set lcs=tab::\ ,eol:$,trail:. "
set nolist "
set nowrapscan
set ic
set tabstop=4
set shiftwidth=4
set grepprg=grep\ -nHr\ --exclude=*svn*\ --include=*.cpp\ --include=*\.\[c,h\]\   "
set mouse=a
set smartindent
set termencoding=utf-8
set fileencodings=utf-8,latin1
set encoding=utf-8 
set expandtab 
set softtabstop=4 
set fdc=2
set incsearch
set hlsearch

" map the char / to search slected text in visual mode.
" CTRL+R followed with a ["] will paste to the command line 
vmap / y/<C-R>"<CR>
vmap <S-e> y:tabedit <C-R>"<CR>

"if &ft=='c' || &ft=='cpp'
vmap <S-c><S-c> :s/^/\/\/\ /g<CR>:nohl<CR>
"else
vmap <S-c> :s/^/#\ /g<CR>:nohl<CR>
"endif

" toggle ignore case for searches.
map <C-i> :set ic<CR>
map <C-i><C-i> :set noic<CR>

" redraw screen up/downward while keeping cursor in the middle of the screen
map <C-e> kzz
map <C-y> jzz
" remove highlighted text that was searched.
map <S-h> :nohl<CR>
map lll :!ls -ltr<CR>
map gf :tabedit <cfile><CR>
map <C-b><C-d> :bd<CR>
map <C-k> :set list<CR>
map <C-k><C-k> :set nolist<CR>
map <S-t> <Esc>:tabedit 
map <A-t> <Esc>:tabnew<CR>
map <S-w> <Esc>:tabclose<CR>
map <C-Left> <Esc>:tabNext<CR>
map <C-Right> <Esc>:tabnext<CR>
map <S-s> :w<CR>
map <C-s> :Sexplore<CR>
map <C-q> :q<CR>
map <C-q><C-a> :qa!<CR>
"map <C-x> :x<CR>
map ,v :sp ~/.vimrc<cr> " edit my .vimrc file in a split
map ,m :source ~/.vimrc<cr> " source my .vimrc file
map ttt :set tabstop=3<CR>:set shiftwidth=3<CR>:set softtabstop=3<CR>
map ttc :set tabstop=4<CR>:set shiftwidth=4<CR>:set softtabstop=4<CR>
map tt1 :set tabstop=1<CR>:set shiftwidth=1<CR>:set softtabstop=1<CR>
" map <F2> a<C-R>=strftime("%d %b %Y %H:%M")<CR><Esc>
map <F2> a========== <C-R>=strftime("%A %d %b %Y %H:%M")<CR> ========================<Esc>

" Make F5 reload .vimrc
map <silent> <F5> :source ~/.vimrc<CR>

" delete all buffers 
map bda :bufdo :bd<CR>

" colorscheme delek for vimdiff
" colorscheme peaksea
" colorscheme elflord
colorscheme morning
set diffopt=iwhite,filler
set t_Co=256

" for vimdiff
map [p [c
map ]p ]c

if &diff
    set nu
endif

" au BufWinLeave * mkview
" au BufWinEnter * silent loadview

if &ft=='c' || &ft=='cpp'
set tabstop=4       " numbers of spaces of tab character
set shiftwidth=4    " numbers of spaces to (auto)indent
set softtabstop=4
else
set tabstop=3       " numbers of spaces of tab character
set shiftwidth=3    " numbers of spaces to (auto)indent
set softtabstop=3
endif

"
" spelling
"
set spelllang=en_us
" set spellfile="/home/yonic/.spellfile"

